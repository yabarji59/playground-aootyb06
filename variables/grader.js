const assert = require('assert');

// V√©rifier que le code s'ex√©cute sans erreur
try {
    require('./solution.js');
    console.log('‚úÖ Le code s\'ex√©cute sans erreur');
} catch (error) {
    console.error('‚ùå Erreur lors de l\'ex√©cution du code:', error);
    process.exit(1);
}

// V√©rifier que les variables sont d√©clar√©es
try {
    const solution = require('./solution.js');
    
    // V√©rifier que nom est d√©clar√© avec let
    assert(typeof solution.nom !== 'undefined', 'La variable nom n\'est pas d√©clar√©e');
    assert(typeof solution.nom === 'string', 'La variable nom doit √™tre une cha√Æne de caract√®res');
    
    // V√©rifier que age est d√©clar√© avec let
    assert(typeof solution.age !== 'undefined', 'La variable age n\'est pas d√©clar√©e');
    assert(typeof solution.age === 'number', 'La variable age doit √™tre un nombre');
    
    // V√©rifier que TAILLE est d√©clar√© avec const
    assert(typeof solution.TAILLE !== 'undefined', 'La constante TAILLE n\'est pas d√©clar√©e');
    assert(typeof solution.TAILLE === 'number', 'La constante TAILLE doit √™tre un nombre');
    
    // V√©rifier que l'objet personne est correctement cr√©√©
    assert(typeof solution.personne === 'object', 'L\'objet personne n\'est pas cr√©√©');
    assert(solution.personne.nom === solution.nom, 'La propri√©t√© nom de l\'objet personne est incorrecte');
    assert(solution.personne.age === solution.age, 'La propri√©t√© age de l\'objet personne est incorrecte');
    assert(solution.personne.taille === solution.TAILLE, 'La propri√©t√© taille de l\'objet personne est incorrecte');
    
    console.log('‚úÖ Toutes les variables sont correctement d√©clar√©es et typ√©es');
} catch (error) {
    console.error('‚ùå Erreur lors de la validation des variables:', error);
    process.exit(1);
}

console.log('üéâ Tous les tests sont pass√©s !'); 